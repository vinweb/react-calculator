{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Counter","props","state","count","number","clear","bind","equals","add","subtract","multiply","divide","decimal","zero","one","two","three","four","five","six","seven","eight","nine","regexEndDigit","regexEndOperation","regexEndOperationSub","regexEndSubtract","this","test","setState","concat","newCount","slice","math","toString","charAt","className","href","id","onClick","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.71ca4ac7.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport * as math from 'mathjs';\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: \"\",\n      number: \"0\"\n    };\n    this.clear = this.clear.bind(this);\n    this.equals = this.equals.bind(this);\n    this.add = this.add.bind(this);\n    this.subtract = this.subtract.bind(this);\n    this.multiply = this.multiply.bind(this);\n    this.divide = this.divide.bind(this);\n    this.decimal = this.decimal.bind(this);\n    this.zero = this.zero.bind(this);\n    this.one = this.one.bind(this);\n    this.two = this.two.bind(this);\n    this.three = this.three.bind(this);\n    this.four = this.four.bind(this);\n    this.five = this.five.bind(this);\n    this.six = this.six.bind(this);\n    this.seven = this.seven.bind(this);\n    this.eight = this.eight.bind(this);\n    this.nine = this.nine.bind(this);\n    this.regexEndDigit = /\\d$/;\n    this.regexEndOperation = /[\\-\\*\\/]$/g;\n    this.regexEndOperationSub = /[\\+\\*\\/]$/g;\n    this.regexEndSubtract = /[\\-]$/;\n  }\n\n  add() {\n    if (this.regexEndDigit.test(this.state.number)) {\n      this.setState((state) => ({\n        count: state.count.concat(\"+\"),\n        number: \"+\"\n      }));\n    }\n    if (this.regexEndOperation.test(this.state.number)) {\n      const newCount = this.state.count.slice(0, -1);\n      this.setState((state) => ({\n        count: newCount.concat(\"+\"),\n        number: \"+\"\n      }));\n    }\n  }\n\n  subtract() {\n    if (\n      this.regexEndDigit.test(this.state.number) ||\n      this.regexEndOperationSub.test(this.state.number)\n    ) {\n      this.setState((state) => ({\n        count: state.count.concat(\"-\"),\n        number: \"-\"\n      }));\n    }\n  }\n\n  multiply() {\n    if (this.regexEndDigit.test(this.state.number)) {\n      this.setState((state) => ({\n        count: state.count.concat(\"*\"),\n        number: \"*\"\n      }));\n    }\n    if (this.regexEndOperation.test(this.state.number)) {\n      const newCount = this.state.count.slice(0, -1);\n      this.setState((state) => ({\n        count: newCount.concat(\"*\"),\n        number: \"*\"\n      }));\n    }\n  }\n\n  divide() {\n    if (this.regexEndDigit.test(this.state.number)) {\n      this.setState((state) => ({\n        count: state.count.concat(\"/\"),\n        number: \"/\"\n      }));\n    }\n    if (this.regexEndOperation.test(this.state.number)) {\n      const newCount = this.state.count.slice(0, -1);\n      this.setState((state) => ({\n        count: newCount.concat(\"/\"),\n        number: \"/\"\n      }));\n    }\n  }\n\n  clear() {\n    this.setState((state) => ({\n      count: \"\",\n      number: \"0\"\n    }));\n  }\n\n  equals() {\n    this.setState((state) => ({\n      count: math.evaluate(this.state.count).toString(),\n      number: math.evaluate(this.state.count).toString()\n    }));\n  }\n\n  decimal() {\n    const regexDecimal = /(^\\d+$|[\\+\\-\\*\\/]\\d+$)/g;\n    if (regexDecimal.test(this.state.count)) {\n      this.setState((state) => ({\n        count: state.count.concat(\".\"),\n        number: state.count.concat(\".\")\n      }));\n    }\n  }\n\n  zero() {\n    if (this.state.count.charAt(0) !== 0) {\n      this.setState((state) => ({\n        count: state.count.concat(0),\n        number: state.count.concat(0)\n      }));\n    }\n  }\n\n  one() {\n    this.setState((state) => ({\n      count: state.count.concat(1),\n      number: state.count.concat(1)\n    }));\n  }\n\n  two() {\n    this.setState((state) => ({\n      count: state.count.concat(2),\n      number: state.count.concat(2)\n    }));\n  }\n\n  three() {\n    this.setState((state) => ({\n      count: state.count.concat(3),\n      number: state.count.concat(3)\n    }));\n  }\n\n  four() {\n    this.setState((state) => ({\n      count: state.count.concat(4),\n      number: state.count.concat(4)\n    }));\n  }\n\n  five() {\n    this.setState((state) => ({\n      count: state.count.concat(5),\n      number: state.count.concat(5)\n    }));\n  }\n\n  six() {\n    this.setState((state) => ({\n      count: state.count.concat(6),\n      number: state.count.concat(6)\n    }));\n  }\n\n  seven() {\n    this.setState((state) => ({\n      count: state.count.concat(7),\n      number: state.count.concat(7)\n    }));\n  }\n\n  eight() {\n    this.setState((state) => ({\n      count: state.count.concat(8),\n      number: state.count.concat(8)\n    }));\n  }\n\n  nine() {\n    this.setState((state) => ({\n      count: state.count.concat(9),\n      number: state.count.concat(9)\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"container h-100 p-5 bg-light text-right\">\n        <h3>React Calculator</h3>\n        <p className=\"text-secondary\"><small>Coded by <a href=\"http://www.vinweb.hu\" className=\"text-secondary\">Janos Vincze</a></small></p>\n        <div className=\"row\">\n          <div className=\"col alert alert-info text-right pr-2\">\n            <div className=\"counter mb-2\">{this.state.count}</div>\n            <div id=\"display\">{this.state.number}</div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <button\n              id=\"clear\"\n              className=\"btn btn-danger rounded-circle btn-lg\"\n              onClick={this.clear}\n            >\n              C\n            </button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <button\n              id=\"seven\"\n              className=\"btn btn-secondary rounded-circle btn-lg\"\n              onClick={this.seven}\n            >\n              7\n            </button>\n            <button\n              id=\"eight\"\n              className=\"btn btn-secondary rounded-circle btn-lg\"\n              onClick={this.eight}\n            >\n              8\n            </button>\n            <button\n              id=\"nine\"\n              className=\"btn btn-secondary rounded-circle btn-lg\"\n              onClick={this.nine}\n            >\n              9\n            </button>\n            <button\n              id=\"divide\"\n              className=\"btn btn-info rounded-circle btn-lg\"\n              onClick={this.divide}\n            >\n              /\n            </button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <button\n              id=\"four\"\n              className=\"btn btn-secondary rounded-circle btn-lg\"\n              onClick={this.four}\n            >\n              4\n            </button>\n            <button\n              id=\"five\"\n              className=\"btn btn-secondary rounded-circle btn-lg\"\n              onClick={this.five}\n            >\n              5\n            </button>\n            <button\n              id=\"six\"\n              className=\"btn btn-secondary rounded-circle btn-lg\"\n              onClick={this.six}\n            >\n              6\n            </button>\n            <button\n              id=\"multiply\"\n              className=\"btn btn-info rounded-circle btn-lg\"\n              onClick={this.multiply}\n            >\n              x\n            </button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <button\n              id=\"one\"\n              className=\"btn btn-secondary rounded-circle btn-lg\"\n              onClick={this.one}\n            >\n              1\n            </button>\n            <button\n              id=\"two\"\n              className=\"btn btn-secondary rounded-circle btn-lg\"\n              onClick={this.two}\n            >\n              2\n            </button>\n            <button\n              id=\"three\"\n              className=\"btn btn-secondary rounded-circle btn-lg\"\n              onClick={this.three}\n            >\n              3\n            </button>\n            <button\n              id=\"subtract\"\n              className=\"btn btn-info rounded-circle btn-lg\"\n              onClick={this.subtract}\n            >\n              -\n            </button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <button\n              id=\"decimal\"\n              className=\"btn btn-secondary rounded-circle btn-lg\"\n              onClick={this.decimal}\n            >\n              .\n            </button>\n            <button\n              id=\"zero\"\n              className=\"btn btn-secondary rounded-circle btn-lg\"\n              onClick={this.zero}\n            >\n              0\n            </button>\n            <button\n              id=\"equals\"\n              className=\"btn btn-success rounded-circle btn-lg\"\n              onClick={this.equals}\n            >\n              =\n            </button>\n            <button\n              id=\"add\"\n              className=\"btn btn-info rounded-circle btn-lg\"\n              onClick={this.add}\n            >\n              +\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Counter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Counter from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Counter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}